package me.nciklol.easytpa;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.TimeUnit;

public class CommandTPA implements CommandExecutor {

    // We use this map to ensure that this is the same request that was generated by this request
    // So if a player tpa's to someone and then tpa's again right after it won't be timed out by the previous tpa.
    public static Map<UUID, Integer> securityTable = new HashMap();
    public int count = 1;

    @Override
    public boolean onCommand(CommandSender sender, Command command, String s, String[] strings) {
        if (sender instanceof Player) {
            // Cast the sender as a player
            Player player = (Player) sender;

            if (strings.length == 0) {
                sender.sendMessage(ChatColor.translateAlternateColorCodes('&', "&c&bYou need to mention a player!"));
                return false;
            }

            Player player2 = Bukkit.getPlayer(strings[0]);

            if (player2 == null) {
                sender.sendMessage(ChatColor.translateAlternateColorCodes('&', "&c&bCould not find player!"));
                return true;
            }

            player.sendMessage(ChatColor.translateAlternateColorCodes('&', "&aAsking them to teleport.."));
            player2.sendMessage(ChatColor.translateAlternateColorCodes('&',
                    "&aHey, " + player.getDisplayName() + " is trying to teleport to you! Type /tpaccept to accept!"));

            Main.tpPlayers.put(player2.getUniqueId(), player.getUniqueId());

            count++;

            int currentCount = count;

            this.securityTable.put(player2.getUniqueId(), currentCount);

            CompletableFuture.delayedExecutor(30, TimeUnit.SECONDS).execute(() -> {
                if (this.securityTable.get(player2.getUniqueId()) == null || this.securityTable.get(player2.getUniqueId()) != currentCount) {
                    return;
                }

                player.sendMessage(ChatColor.translateAlternateColorCodes('&', "&cTimed out."));
                player2.sendMessage(ChatColor.translateAlternateColorCodes('&', "&cTimed out."));
            });


            return true;

        }

        sender.sendMessage("You need to be a player to use this command!");
        return true;
    }
}
